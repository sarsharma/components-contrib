name: redis
cert-status: alpha
version: v1
binding-type: [output]
connection-metadata:
  - name: redisHost
    required: true
    binding-support: [output]
    description: The Redis host address
    example: localhost:6379
  - name: redisPassword
    required: true
    binding-support: [output]
    description: The Redis password
    example: password
  - name: redisUsername
    required: false
    binding-support: [output]
    description: Username for Redis host. Defaults to empty. Make sure your redis server version is 6 or above, and have created acl rule correctly.
    example: username
  - name: enableTLS
    required: false
    binding-support: [output]
    description: If the Redis instance supports TLS with public certificates it can be configured to enable or disable TLS. Defaults to 'false'
    example: false
  - name: failover
    required: false
    binding-support: [output]
    description: Property to enabled failover configuration. Needs sentinalMasterName to be set. Defaults to 'false'
    example: false
  - name: sentinelMasterName
    required: false
    binding-support: [output]
    description: The sentinel master name.
    example: 127.0.0.1:6379
  - name: redeliverInterval
    required: false
    binding-support: [output]
    description: The interval between checking for pending messages to redelivery. Defaults to "60s". "0" disables redelivery.
    example: 30s
  - name: processingTimeout
    required: false
    binding-support: [output]
    description: The amount time a message must be pending before attempting to redeliver it. Defaults to "15s". "0" disables redelivery.
    example: 30s
  - name: redisType
    required: false
    binding-support: [output]
    description: The type of redis. There are two valid values, one is "node" for single node mode, the other is "cluster" for redis cluster mode. Defaults to "node".
    example: cluster
  - name : redisDB
    required: false
    binding-support: [output]
    description: Database selected after connecting to redis. If "redisType" is "cluster" this option is ignored. Defaults to "0".
    example: 0
  - name : redisMaxRetries
    required: false
    binding-support: [output]
    description: Maximum number of times to retry commands before giving up. Default is to not retry failed commands.
    example: 5
  - name : redisMinRetryInterval
    required: false
    binding-support: [output]
    description: Minimum backoff for redis commands between each retry. Default is "8ms"; "-1" disables backoff.
    example: 8ms
  - name : redisMaxRetryInterval
    required: false
    binding-support: [output]
    description: Maximum backoff for redis commands between each retry. Default is "512ms";"-1" disables backoff.
    example: 5s
  - name : dialTimeout
    required: false
    binding-support: [output]
    description: 	Dial timeout for establishing new connections. Defaults to "5s".
    example: 5s
  - name : writeTimeout
    required: false
    binding-support: [output]
    description: Timeout for socket writes. If reached, redis commands will fail with a timeout instead of blocking. Defaults is readTimeout.
    example: 3s
  - name : poolSize
    required: false
    binding-support: [output]
    description: Maximum number of socket connections. Default is 10 connections per every CPU as reported by runtime.NumCPU.
    example: 20
  - name : poolTimeout
    required: false
    binding-support: [output]
    description: Amount of time client waits for a connection if all connections are busy before returning an error. Default is readTimeout + 1 second.
    example: 5s
  - name : maxConnAge
    required: false
    binding-support: [output]
    description: Connection age at which the client retires (closes) the connection. Default is to not close aged connections.
    example: 30m
  - name : minIdleConns
    required: false
    binding-support: [output]
    description: Minimum number of idle connections to keep open in order to avoid the performance degradation associated with creating new connections. Defaults to "0".
    example: 2
  - name : idleCheckFrequency
    required: false
    binding-support: [output]
    description: Frequency of idle checks made by idle connections reaper. Default is "1m". "-1" disables idle connections reaper.
    example: -1
  - name : idleTimeout
    required: false
    binding-support: [output]
    description: Amount of time after which the client closes idle connections. Should be less than server's timeout. Default is "5m". "-1" disables idle timeout check.
    example: 10m
operations:
  - name: create
    description: We can store a record in Redis using the `create` command. This will set a key to hold a value. If a key already holds a value, it will be overwritten.
    inputs:
      data:
        - name:
          required: true
          description: The data we want to store.
      metadata:
        - name: key
          required: true
          description: The key where the data will be stored.
    outputs:
      data:


